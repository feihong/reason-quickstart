// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Js_json = require("bs-platform/lib/js/js_json.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function crazyFunc (text){
  switch(text) {
    case 'string':
      return 'hello world'
    case 'float':
      return 999.999
    case 'int':
      return 42
    case 'true':
      return true
    case 'false':
      return false
    case 'null':
      return null
    default:
      return {name: 'Cassidy', job: 'adventurer'}
  }
};

Belt_List.forEach(Belt_List.map(/* :: */Caml_chrome_debugger.simpleVariant("::", [
            "string",
            /* :: */Caml_chrome_debugger.simpleVariant("::", [
                "float",
                /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    "int",
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        "true",
                        /* :: */Caml_chrome_debugger.simpleVariant("::", [
                            "false",
                            /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                "null",
                                /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                    "whatever",
                                    /* [] */0
                                  ])
                              ])
                          ])
                      ])
                  ])
              ])
          ]), (function (v) {
            var match = Js_json.classify(crazyFunc(v));
            if (typeof match === "number") {
              switch (match) {
                case /* JSONFalse */0 :
                    return /* `Bool */Caml_chrome_debugger.polyVar("Bool", [
                              737456202,
                              false
                            ]);
                case /* JSONTrue */1 :
                    return /* `Bool */Caml_chrome_debugger.polyVar("Bool", [
                              737456202,
                              true
                            ]);
                case /* JSONNull */2 :
                    return /* Null */870828711;
                
              }
            } else {
              switch (match.tag | 0) {
                case /* JSONString */0 :
                    return /* `String */Caml_chrome_debugger.polyVar("String", [
                              -976970511,
                              match[0]
                            ]);
                case /* JSONNumber */1 :
                    return /* `Float */Caml_chrome_debugger.polyVar("Float", [
                              365180284,
                              match[0]
                            ]);
                case /* JSONObject */2 :
                    return /* `Object */Caml_chrome_debugger.polyVar("Object", [
                              -908856609,
                              match[0]
                            ]);
                case /* JSONArray */3 :
                    return Pervasives.failwith("Unexpected type");
                
              }
            }
          })), (function (v) {
        console.log(v);
        return /* () */0;
      }));

exports.crazyFunc = crazyFunc;
/*  Not a pure module */
