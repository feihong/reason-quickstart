// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Json = require("@glennsl/bs-json/src/Json.bs.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Axios = require("axios");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function pagination(json) {
  return {
          page_count: Json_decode.field("page_count", Json_decode.$$int, json)
        };
}

function $$event(json) {
  return {
          id: Json_decode.field("id", Json_decode.string, json),
          name: Json_decode.at(/* :: */Caml_chrome_debugger.simpleVariant("::", [
                    "name",
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        "text",
                        /* [] */0
                      ])
                  ]), Json_decode.string)(json),
          description: Json_decode.at(/* :: */Caml_chrome_debugger.simpleVariant("::", [
                    "description",
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        "text",
                        /* [] */0
                      ])
                  ]), Json_decode.string)(json),
          url: Json_decode.field("url", Json_decode.string, json),
          start: Json_decode.at(/* :: */Caml_chrome_debugger.simpleVariant("::", [
                    "start",
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        "local",
                        /* [] */0
                      ])
                  ]), Json_decode.string)(json),
          venue: undefined
        };
}

function page(json) {
  return {
          pagination: Json_decode.field("pagination", pagination, json),
          events: Json_decode.field("events", (function (param) {
                  return Json_decode.array($$event, param);
                }), json)
        };
}

var Decode = {
  pagination: pagination,
  $$event: $$event,
  page: page
};

function getAccessToken(param) {
  return Json_decode.field("eventbrite_access_token", Json_decode.string, Json.parseOrRaise(Fs.readFileSync("secrets.json", "utf8")));
}

var cfg = {
  params: {
    token: getAccessToken(/* () */0),
    "location.address": "2100 S Wentworth Ave, Chicago, IL 60616",
    "location.within": "1mi",
    sort_by: "date"
  }
};

Axios.get("https://www.eventbriteapi.com/v3/events/search", cfg).then((function (res) {
          console.log(res.status);
          var text = JSON.stringify(res.data, null, 2);
          Fs.writeFileSync("results.json", text, "utf8");
          $$Array.iter((function (evt) {
                  console.log(evt.name);
                  return /* () */0;
                }), page(res.data).events);
          return Promise.resolve((function (prim) {
                        return /* () */0;
                      }));
        })).catch((function (_err) {
        console.log("Unexpected error occurred");
        return Promise.resolve((function (prim) {
                      return /* () */0;
                    }));
      }));

exports.Decode = Decode;
exports.getAccessToken = getAccessToken;
exports.cfg = cfg;
/* cfg Not a pure module */
