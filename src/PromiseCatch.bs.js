// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE
'use strict';

var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

var myPromise = new Promise((function (resolve, _) {
        return resolve(2);
      }));

var unusedPromise = Promise.resolve(5);

myPromise.then((function (value) {
          return Promise.resolve(value);
        })).catch((function (err) {
        console.log(err);
        return Promise.resolve(-1);
      }));

myPromise.then((function (value) {
          var match = value === 2;
          if (match) {
            return Promise.reject([
                        Caml_builtin_exceptions.failure,
                        "rejection!"
                      ]);
          } else {
            return Promise.resolve(value);
          }
        })).catch((function (err) {
        console.log(err);
        return Promise.resolve(-1);
      }));

myPromise.then((function (value) {
          var match = value === 2;
          if (match) {
            return Pervasives.failwith("exception!");
          } else {
            return Promise.resolve(value);
          }
        })).catch((function (err) {
        console.log(err);
        return Promise.resolve(-1);
      }));

myPromise.then((function (value) {
          var match = value === 2;
          if (match) {
            return Pervasives.failwith("exception!");
          } else {
            return Promise.resolve(value);
          }
        })).catch((function (err) {
        if (err[0] === Caml_builtin_exceptions.failure) {
          console.log("After coercion to exn: " + err[1]);
        } else {
          console.log("Unknown type of error");
        }
        return Promise.resolve(-1);
      }));

exports.myPromise = myPromise;
exports.unusedPromise = unusedPromise;
/* myPromise Not a pure module */
