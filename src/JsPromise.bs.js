// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function sleep(ms) {
  return new Promise((function (resolve, _reject) {
                setTimeout((function (param) {
                        return resolve(/* () */0);
                      }), ms);
                return /* () */0;
              }));
}

var __x = Promise.all(Belt_List.toArray(Belt_List.map(/* :: */Caml_chrome_debugger.simpleVariant("::", [
                1000,
                /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    1200,
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        1500,
                        /* :: */Caml_chrome_debugger.simpleVariant("::", [
                            2000,
                            /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                100,
                                /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                    3000,
                                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                        4000,
                                        /* [] */0
                                      ])
                                  ])
                              ])
                          ])
                      ])
                  ])
              ]), (function (n) {
                console.log("Will sleep for " + (String(n) + " milliseconds..."));
                return Promise.resolve(sleep(n).then((function (param) {
                                  return Promise.resolve((console.log("Slept " + (String(n) + " milliseconds!")), /* () */0));
                                })));
              }))));

__x.then((function (param) {
        return Promise.resolve((console.log("All done!"), /* () */0));
      }));

var P = /* alias */0;

exports.P = P;
exports.sleep = sleep;
/* __x Not a pure module */
