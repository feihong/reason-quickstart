// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

describe("Belt.List", (function () {
        Jest.test("make", (function () {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            /* "A" */65,
                            /* :: */[
                              /* "A" */65,
                              /* :: */[
                                /* "A" */65,
                                /* :: */[
                                  /* "A" */65,
                                  /* [] */0
                                ]
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Belt_List.make(4, /* "A" */65)));
              }));
        Jest.test("makeBy", (function () {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            0,
                            /* :: */[
                              2,
                              /* :: */[
                                4,
                                /* :: */[
                                  6,
                                  /* :: */[
                                    8,
                                    /* [] */0
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Belt_List.makeBy(5, (function (i) {
                                      return (i << 1);
                                    }))));
              }));
        Jest.test("getAssoc", (function () {
                return Jest.Expect[/* toEqual */12]("b", Jest.Expect[/* expect */0](Belt_List.getAssoc(/* :: */[
                                    /* tuple */[
                                      1,
                                      "a"
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        2,
                                        "b"
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          3,
                                          "c"
                                        ],
                                        /* [] */0
                                      ]
                                    ]
                                  ], 2, Caml_obj.caml_equal)));
              }));
        Jest.test("zip", (function () {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            /* tuple */[
                              1,
                              /* "a" */97
                            ],
                            /* :: */[
                              /* tuple */[
                                2,
                                /* "b" */98
                              ],
                              /* :: */[
                                /* tuple */[
                                  3,
                                  /* "c" */99
                                ],
                                /* [] */0
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Belt_List.zip(/* :: */[
                                    1,
                                    /* :: */[
                                      2,
                                      /* :: */[
                                        3,
                                        /* [] */0
                                      ]
                                    ]
                                  ], /* :: */[
                                    /* "a" */97,
                                    /* :: */[
                                      /* "b" */98,
                                      /* :: */[
                                        /* "c" */99,
                                        /* :: */[
                                          /* "d" */100,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("zipBy", (function () {
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  /* tuple */[
                                    3,
                                    /* "a" */97
                                  ],
                                  /* :: */[
                                    /* tuple */[
                                      6,
                                      /* "b" */98
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        9,
                                        /* "c" */99
                                      ],
                                      /* [] */0
                                    ]
                                  ]
                                ], Jest.Expect[/* expect */0](Belt_List.zipBy(/* :: */[
                                          1,
                                          /* :: */[
                                            2,
                                            /* :: */[
                                              3,
                                              /* :: */[
                                                4,
                                                /* [] */0
                                              ]
                                            ]
                                          ]
                                        ], /* :: */[
                                          /* "a" */97,
                                          /* :: */[
                                            /* "b" */98,
                                            /* :: */[
                                              /* "c" */99,
                                              /* [] */0
                                            ]
                                          ]
                                        ], (function (x, y) {
                                            return /* tuple */[
                                                    Caml_int32.imul(x, 3),
                                                    y
                                                  ];
                                          }))));
                    }));
      }));

/*  Not a pure module */
